<!doctype html>

<html>

<head>
  <meta charset="utf-8">
	<title>Academia Management Game</title>
</head>

<body style = "margin: 0px; padding: 0px;">

  <canvas id = "gameArea" style = "border: 1px solid #000000;"></canvas>

  <img id = "tileset" width = "0" height = "0" src = "assets/tileset.png">

  <div id = "controls" style = "width: 1270px; padding: 5px; border: 1px solid #000000;">
    <button type = "button" onclick = "genBlankMap()">Generate Blank Map</button>
    <button type = "button" onclick = "refreshTileSet()">Refresh Tileset</button>
  </div>

  <div id = "map"></div>

	<script>
    var TILE_SIZE = 32;
    var CAMERA_SPEED = 0.25;
    var SUPPORTED_RESOUTIONS = [[1920,1080],[1280,720]];

	  var canvas = document.getElementById("gameArea");
		var ctx = canvas.getContext("2d");
    var tileSet = document.getElementById("tileset");
    var mapText = document.getElementById("map");
    var x, y, keyPress;

    var i = 0;
    while (window.innerHeight < SUPPORTED_RESOUTIONS[i][1]) {i++;}
    canvas.width = SUPPORTED_RESOUTIONS[i][0];
    canvas.height = SUPPORTED_RESOUTIONS[i][1];
    mapText.width = canvas.width;

    //Setup initial camera parameters
    var cameraScreenPosition = [0.5 * (canvas.width - TILE_SIZE), 0.5 * (canvas.height - TILE_SIZE)];
    var cameraMapPosition = [2.0, 2.0];

    //Parameters for test map
    var mapLayout = [[1,1,17,16,16,16,24,16,16,16,16,16,19],[1,1,15,30,0,0,14,30,0,0,0,0,15],[17,16,20,30,0,0,0,0,0,0,0,0,15],[15,30,0,0,0,0,12,30,0,0,0,0,15],[40,50,0,0,0,0,18,16,19,30,0,0,15],[15,30,0,0,0,0,0,0,15,30,0,0,15],[40,50,0,0,0,0,0,0,15,30,0,0,15],[15,30,0,0,0,0,0,0,15,30,0,0,15],[18,16,19,30,0,0,0,0,15,30,0,0,15],[1,1,15,30,0,0,0,0,15,30,0,0,15],[1,1,18,16,16,16,16,16,22,16,16,16,20]];
    var mapWidth = mapLayout.length;
    var mapHeight = mapLayout[0].length;
    var collisionMap = zero2D(mapWidth, mapHeight);

    //Setup the Event Listener for keyboard input
    window.addEventListener('keydown', function (e) {
      keyPress = e.keyCode;
    })
    window.addEventListener('keyup', function (e) {
      keyPress = false;
    })
    canvas.addEventListener('mousedown', function(e) {
      if (e.which == 3) {
        var tileX = Math.floor(cameraMapPosition[0] + (e.pageX - cameraScreenPosition[0]) / TILE_SIZE);
        var tileY = Math.floor(cameraMapPosition[1] + (e.pageY - cameraScreenPosition[1]) / TILE_SIZE);
        var tileID = prompt("Enter new tile ID for (" + tileX + ", " + tileY + "):", mapLayout[tileX][tileY]);
        mapLayout[tileX][tileY] = tileID;
        mapText.innerHTML = "<textarea rows='10' cols='180'>" + produceMapString() + "</textarea>";
      }
    })

    function gameLoop() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);

      ctx.fillStyle = "#54AB47";
      ctx.fillRect(0, 0, canvas.width, canvas.height);

      controller();

      for (i = 0; i < mapWidth; i++) {
        x = cameraScreenPosition[0] + TILE_SIZE*(i - cameraMapPosition[0]);
        for (j = 0; j < mapHeight; j++) {
          y = cameraScreenPosition[1] + TILE_SIZE*(j - cameraMapPosition[1]);
          ctx.drawImage(tileSet, (mapLayout[i][j]%10)*TILE_SIZE, Math.floor(mapLayout[i][j]/10.0)*TILE_SIZE, TILE_SIZE, TILE_SIZE, x, y, TILE_SIZE, TILE_SIZE);
        }
      }
      requestAnimationFrame(gameLoop);
    }

    function controller() {
      if (keyPress && keyPress == 37 && cameraMapPosition[0] > 0) {cameraMapPosition[0] -= CAMERA_SPEED;}
      if (keyPress && keyPress == 38 && cameraMapPosition[1] > 0) {cameraMapPosition[1] -= CAMERA_SPEED;}
      if (keyPress && keyPress == 39 && cameraMapPosition[0] < mapWidth) {cameraMapPosition[0] += CAMERA_SPEED;}
      if (keyPress && keyPress == 40 && cameraMapPosition[1] < mapHeight) {cameraMapPosition[1] += CAMERA_SPEED;}
    }

    function produceMapString() {
      var mapString = "[";
      for (i = 0; i < mapWidth - 1; i++) {
        mapString += "[";
        for (j = 0; j < mapHeight - 1; j++) {
          mapString += mapLayout[i][j] + ",";
        }
        mapString += mapLayout[i][mapHeight - 1] + "],";
      }
      mapString += "[";
      for (j = 0; j < mapHeight - 1; j++) {
        mapString += mapLayout[mapWidth - 1][j] + ",";
      }
      mapString += mapLayout[mapWidth - 1][mapHeight - 1] + "]]";
      return mapString;
    }

    function genBlankMap() {
      var newMapX = prompt("Enter width:");
      var newMapY = prompt("Enter height:");
      mapLayout = zero2D(newMapX, newMapY);
      mapWidth = mapLayout.length;
      mapHeight = mapLayout[0].length;
    }

    function zero2D(rows, cols) {
      var array = [], row = [];
      while (cols--) row.push(0);
      while (rows--) array.push(row.slice());
      return array;
    }

    function refreshTileSet() {
      tileSet.src = "assets/tileset.png?t=" + new Date().getTime();
    }

    requestAnimationFrame(gameLoop);
  </script>

</body>

</html>
